
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    

    #gzip  on;


    lua_package_cpath "../lualib/?.so;;"; 
    lua_package_path  "../lualib/?.lua;;";
    #lua_package_path  "../lua/example/lua/?.lua;;";
    #gzip  on;
    #init_worker_by_lua_file  ../lua/example/lua/init_worker.lua;
     include  D:\sourcejd\openresty_lua\openresty-1.13.6.1-win32\conf\example\example.conf;
     lua_socket_pool_size 30;
     lua_socket_keepalive_timeout 60s; 


    server {
        listen       80;
        server_name  localhost openresty.jd.com  ysc.jd.com;

        #charset koi8-r;

                location = / {
           echo "规则A";
        }
        location = /login {
           echo "规则B";
        }
        location ^~ /static/ {
           echo "规则C";
        }
        location ^~ /static/files {
            echo "规则X";
        }
        location ~ \.(gif|jpg|png|js|css)$ {
           echo "规则D";
        }
        location ~* \.png$ {
           echo "规则E";
        }
        location /img {
            echo "规则Y";
        }
        #location / {
         #  echo "规则F";
        #}

        location /helloworld {
            default_type text/html;

            content_by_lua_block {
                ngx.say("HelloWorld")
            }
        }

           location = /hellow2 {
            default_type text/html;
            lua_code_cache off;
            content_by_lua_file  D:\sourcejd\openresty_lua\openresty-1.13.6.1-win32\conf\hello.lua;
            
        }

          
    location ~ /lua_request/(\d+)/(\d+) {
      set $a $1; 
      set $b $host;
      default_type "text/html";
      content_by_lua_file D:\sourcejd\openresty_lua\openresty-1.13.6.1-win32\conf\example\lua\test_request.lua;
     echo after_body "ngx.var.b $b";
  }
  
       
          location = /github {
            proxy_pass  https://github.com;
            proxy_redirect     off;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

       
        location = /README.md {
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass https://github.com/moonbingbing/openresty-best-practices/blob/master/README.md;
        }

        location = /jd {
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://group.jd.com/index/20000001.htm;
        }
   
   

    



       location = /hello {
            default_type text/html;

            content_by_lua_block {
                ngx.say("HelloWorld")
            }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
